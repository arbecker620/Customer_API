
# This is a basic workflow to help you get started with Actions

name: Deploy Testing 

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_test:
    # The type of runner that the job will run on
    runs-on: [self-hosted,  Linux,  ARM64,  build_server]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Setup virtual env, install dependencies
      - name: Build Test Docker Container for Customer API
        run:  |
          docker build -t customer_api:testing --target test .
  run_tests:
      needs: 
        - build_test
      runs-on: [self-hosted,  Linux,  ARM64,  build_server]

      steps:
      - name: Run Tests 
        run: |
          docker run customer_api:testing
  push_image:
      needs:
        - run_tests
      runs-on: [self-hosted,  Linux,  ARM64,  build_server]

      steps:
      - name: Tag Image
        run: |
          docker image tag customer_api:prod rpi4-rome.local:5000/customer_api


      - name: Push Container 
        run: |
          docker images
          
        # docker push rpi4-rome.local:5000/customer_api:latest

  clear_containter:
      runs-on: [self-hosted,  Linux,  ARM64,  build_server]
      - name: clear testing Container
        if: always()
        run:  |
          docker rmi -f $(docker images -f=reference='customer_api:testing' --format "{{.ID}}")



 
